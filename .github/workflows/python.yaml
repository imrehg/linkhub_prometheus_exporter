name: Python

on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:

jobs:
  test:
    name: "Lint & test"
    strategy:
      matrix:
        # Needs to be string for 3.10, otherwise it's wrongly parsed as 3.1
        python-version: ['3.10']
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Switch to Current Branch
        run: git checkout ${{ env.BRANCH }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install 'poetry>=1.2.0b1' 'nox'
          poetry plugin add poetry-dynamic-versioning-plugin
          nox -l

      - name: Run linting
        run: |
          nox -s lint

      - name: Run unit tests
        run: |
          nox -s test-${{ matrix.python-version }}

  publish:
    name: "Publish to PyPI"
    needs: test
    if: ${{ github.ref_type	 == 'tag'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          # Needs to be string for 3.10, otherwise it's wrongly parsed as 3.1
          python-version: '3.10'

      - name: Publish
        run: |
          python -m pip install --upgrade pip
          python -m pip install 'poetry>=1.2.0b1'
          poetry plugin add poetry-dynamic-versioning-plugin
          poetry publish --no-interaction --build --username __token__ --password ${{ secrets.PYPI_DEPLOY_TOKEN }}

  docker:
    name: "Publish to DockerHub"
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.ref_type	 == 'tag'}}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: imrehg/linkhub_prometheus_exporter:latest,imrehg/linkhub_prometheus_exporter:${{github.ref_name}}
